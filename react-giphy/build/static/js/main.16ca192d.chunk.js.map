{"version":3,"sources":["App.js","index.js"],"names":["App","useState","gifName","setGifName","gifUrl","setGifUrl","tagName","setTagName","invalidSearch","setInvalidSearch","favouriteList","setFavouriteList","useEffect","getRandomGif","generatedFavouriteList","map","record","index","key","name","onClick","url","handleFavRemoveClick","a","fetch","res","json","data","console","log","user","display_name","image_url","images","downsized_medium","title","item","newFavouriteList","filter","word","nIndex","className","type","placeholder","onChange","event","target","value","getTagGif","src","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"kQAIe,SAASA,IACtB,IACA,EAA8BC,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAFL,uIAEvB,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA8BJ,qBAA9B,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA0CN,oBAAS,GAAnD,mBAAOO,EAAP,KAAsBC,EAAtB,KACA,EAA0CR,mBAAS,IAAnD,mBAAOS,EAAP,KAAsBC,EAAtB,KAGAC,qBAAU,WACRC,MACC,IAEH,IAAMC,EAAyBJ,EAAcK,KAAI,SAACC,EAAQC,GACxD,OAAO,wBAAIC,IAAKD,GAAT,UACDD,EAAOG,KADN,UACgB,4BAAQC,QAAS,WAAQf,EAAUW,EAAOK,OAA1C,aACrB,4BAAQD,QACN,WACEE,EAAqBN,EAAQC,KAFjC,cAhBwB,SAwBbJ,IAxBa,2EAwB5B,8BAAAU,EAAA,6DAEEd,GAAiB,GAFnB,SAGoBe,MAAM,+FAH1B,cAGQC,EAHR,gBAIqBA,EAAIC,OAJzB,OAIQC,EAJR,OAKEC,QAAQC,IAAIF,EAAKA,MACjBxB,EAAWwB,EAAKA,KAAKG,KAAKC,cAC1B1B,EAAUsB,EAAKA,KAAKK,WAPtB,6CAxB4B,kEAmC5B,WAAyB1B,GAAzB,iBAAAiB,EAAA,+EAEsBC,MAAM,mFAAD,OAAoFlB,EAApF,wCAF3B,cAEUmB,EAFV,gBAGuBA,EAAIC,OAH3B,OAGUC,EAHV,OAIIC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAKA,KAAK,GAAGM,OAAOC,iBAAiBb,KACjDlB,EAAWwB,EAAKA,KAAK,GAAGQ,OACxB9B,EAAUsB,EAAKA,KAAK,GAAGM,OAAOC,iBAAiBb,KAPnD,kDAWIZ,GAAiB,GAXrB,2DAnC4B,sBAkD5B,IAIMa,EAAuB,SAACc,EAAMnB,GAClC,IAAMoB,EAAmB3B,EAAc4B,QAAO,SAACC,EAAMC,GAEnD,OADAZ,QAAQC,IAAIW,GACLvB,IAAUuB,KAEnB7B,EAAiB0B,IAmBnB,OACE,yBAAKI,UAAU,OACb,yBAAKA,UAAU,gBACb,8CACA,4BACG3B,IAGL,qCACA,yBAAK2B,UAAU,QACb,2BAAOtB,KAAK,cAAcuB,KAAK,OAAOC,YAAY,oBAAoBC,SAtCnD,SAACC,GACxBtC,EAAWsC,EAAMC,OAAOC,UAsCpB,2BAAOL,KAAK,SAAStB,QAhBN,SAACyB,GACpBpC,GAAiB,GA1ES,oCA2E1BuC,CAAU1C,OAgBPE,EAAgB,8DAAyC,GAC1D,4BAAQY,QAASP,GAAjB,kBACA,4BAAQO,QA/BiB,SAACyB,GAC5BlC,EAAiB,GAAD,mBAETD,GAFS,CAEM,CAChBS,KAAMjB,EACNmB,IAAKjB,QA0BT,yBACA,6BACA,yBAAK6C,IAAK7C,KC9FhB,IAAM8C,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACvD,EAAD,OAEFkD,I","file":"static/js/main.16ca192d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\n\n\nexport default function App() {\n  const placeHolderUrl = \"https://media1.giphy.com/media/5YhM7FikN75SXkbInU/giphy.gif?cid=348326f198jcea4lqqstuy8yff02lgokljwrfz9oqo21mxqv&rid=giphy.gif&ct=g\";\n  const [gifName, setGifName] = useState();\n  const [gifUrl, setGifUrl] = useState(placeHolderUrl);\n  const [tagName, setTagName] = useState();\n  const [invalidSearch, setInvalidSearch] = useState(false);\n  const [favouriteList, setFavouriteList] = useState([]);\n\n\n  useEffect(() => {\n    getRandomGif();\n  }, []);\n\n  const generatedFavouriteList = favouriteList.map((record, index) => {\n    return <li key={index}>\n      {`${record.name}  `} <button onClick={() => { setGifUrl(record.url) }}>Show This</button>\n      <button onClick={\n        () => {\n          handleFavRemoveClick(record, index);\n        }\n      }>Remove</button>\n    </li>\n  });\n\n  async function getRandomGif() {\n\n    setInvalidSearch(false);\n    const res = await fetch('https://api.giphy.com/v1/gifs/random?api_key=VwX5rMlCa8g5UBhAnh1Riqf3JCjh3602&tag=&rating=g'); //fetch random\n    const data = await res.json();\n    console.log(data.data);\n    setGifName(data.data.user.display_name);\n    setGifUrl(data.data.image_url);\n\n  }\n\n  async function getTagGif(tagName) {\n    try {\n      const res = await fetch(`https://api.giphy.com/v1/gifs/search?api_key=VwX5rMlCa8g5UBhAnh1Riqf3JCjh3602&q=${tagName}&limit=25&offset=0&rating=g&lang=en`); //fetch by tagname\n      const data = await res.json();\n      console.log(data);\n      console.log(data.data[0].images.downsized_medium.url);\n      setGifName(data.data[0].title);\n      setGifUrl(data.data[0].images.downsized_medium.url);\n    }\n\n    catch {\n      setInvalidSearch(true);\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setTagName(event.target.value);\n  }\n\n  const handleFavRemoveClick = (item, index) => {\n    const newFavouriteList = favouriteList.filter((word, nIndex) => {\n      console.log(nIndex);\n      return index !== nIndex\n    });\n    setFavouriteList(newFavouriteList)\n  }\n\n  const handleAddToFavourite = (event) => {\n    setFavouriteList(\n      [\n        ...favouriteList, {\n          name: gifName,\n          url: gifUrl\n        }\n      ]\n    )\n  }\n\n  const handleSubmit = (event) => {\n    setInvalidSearch(false);\n    getTagGif(tagName);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"FavouriteDiv\">\n        <h1>Favourite List</h1>\n        <ul>\n          {generatedFavouriteList}\n        </ul>\n      </div>\n      <h1>Giphy</h1>\n      <div className=\"Form\">\n        <input name=\"searchByTag\" type=\"text\" placeholder=\"Search Gif by Tag\" onChange={handleNameChange} />\n        <input type=\"submit\" onClick={handleSubmit} />\n      </div>\n      {invalidSearch ? <p>Invalid tag try a different one</p> : \"\"}\n      <button onClick={getRandomGif}>Get Random Gif</button>\n      <button onClick={handleAddToFavourite}>Add to Favourite List</button>\n      <br />\n      <img src={gifUrl}></img>\n    </div >\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}