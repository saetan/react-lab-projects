{"version":3,"sources":["ColoredDiv.js","App.js","index.js"],"names":["ColoredDiv","props","useState","width","setWidth","updateWidth","window","innerWidth","useEffect","addEventListener","styles","background","color","flex","style","className","onClick","event","filtered","colors","filter","index","setColors","colourList","App","colorsArr","map","d","i","key","flexWrap","newColour","getRandomNumber","Math","floor","random","length","getRandomColour","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"qOAyCeA,G,MAtCI,SAACC,GAElB,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAc,WAClBD,EAASE,OAAOC,aAWlBC,qBAAU,WACRF,OAAOG,iBAAiB,SAAUJ,KACjC,IACH,IAAIK,EAAS,CACXC,WAAYV,EAAMW,MAElBC,KAAMV,GAAS,KAAO,EAAI,GAG5B,OACE,oCACE,yBACEW,MAAOJ,EACPK,UAAU,eAETd,EAAMW,MACP,4BAAQI,QAxBO,SAACC,GACpB,IAAMC,EAAWjB,EAAMkB,OAAOC,QAAO,SAACR,EAAOS,GAC3C,OAAOA,IAAUpB,EAAMoB,SAEzBpB,EAAMqB,UAAUJ,KAoBZ,cC/BFK,EAAa,CAAC,aAAc,OAAQ,YAAa,OAAQ,QAAS,SAAU,OAAQ,YAAa,aAAc,OACnH,UAAW,WAAY,YAAa,aAAc,OAAQ,MAAO,QAKpD,SAASC,IACtB,MAA4BtB,mBAAS,CAAC,aAAc,OAAQ,cAA5D,mBAAOiB,EAAP,KAAeG,EAAf,KACA,EAA0BpB,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAc,WAClBD,EAASE,OAAOC,aAGlBC,qBAAU,WACRF,OAAOG,iBAAiB,SAAUJ,GAClCA,MACC,IAEH,IAAMoB,EAAYN,EAAOO,KAAI,SAACC,EAAGC,GAC/B,OACE,kBAAC,EAAD,CAAYhB,MAAOe,EAAGE,IAAKD,EAAGP,MAAOO,EAAGT,OAAQA,EAAQG,UAAWA,OAavE,OACE,yBAAKP,UAAU,OACb,qDAA2BZ,GAC3B,yBAAKW,MARI,CACXgB,SAAU,QAOYf,UAAU,gBAC3BU,GAEH,4BAAQT,QAhBS,WACnB,IAAIe,EAvBgB,WACtB,IAAIC,EAAkBC,KAAKC,MAAMD,KAAKE,SAAWZ,EAAWa,QAC5D,OAAOb,EAAWS,GAqBAK,GAChBf,EAAU,GAAD,mBAAKH,GAAL,CAAaY,OAcpB,kBCvCN,IAAMO,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACnB,EAAD,OAEFc,I","file":"static/js/main.3df2f4a2.chunk.js","sourcesContent":["// IMPORT useEffect\nimport React, { useState, useEffect } from \"react\";\n\nconst ColoredDiv = (props) => {\n\n  const [width, setWidth] = useState(0);\n  // SETUP useEffect\n  const updateWidth = () => {\n    setWidth(window.innerWidth)\n  }\n\n  const removeColour = (event) => {\n    const filtered = props.colors.filter((color, index) => {\n      return index !== props.index\n    });\n    props.setColors(filtered);\n\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', updateWidth);\n  }, [])\n  let styles = {\n    background: props.color,\n    // add conditional logic here\n    flex: width >= 1024 ? 1 : 0\n  }\n\n  return (\n    <>\n      <div\n        style={styles}\n        className=\"colored-div\"\n      >\n        {props.color}\n        <button onClick={removeColour}>Remove</button>\n      </div>\n    </>\n  );\n}\n\nexport default ColoredDiv","import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport ColoredDiv from './ColoredDiv'\n\nconst colourList = ['lightgreen', 'pink', 'lightblue', 'blue', 'brown', 'purple', 'aqua', 'chocolate', 'darkviolet', 'gold',\n  'hotpink', 'lavender', 'limegreen', 'mediumblue', 'snow', 'tan', 'teal'];\nconst getRandomColour = () => {\n  let getRandomNumber = Math.floor(Math.random() * colourList.length);\n  return colourList[getRandomNumber];\n}\nexport default function App() {\n  const [colors, setColors] = useState(['lightgreen', 'pink', 'lightblue'])\n  const [width, setWidth] = useState(0)\n\n  const updateWidth = () => {\n    setWidth(window.innerWidth)\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', updateWidth);\n    updateWidth();\n  }, [])\n\n  const colorsArr = colors.map((d, i) => {\n    return (\n      <ColoredDiv color={d} key={i} index={i} colors={colors} setColors={setColors} />)\n  })\n\n  const addNewColour = () => {\n    let newColour = getRandomColour();\n    setColors([...colors, newColour]);\n  }\n\n  let styles = {\n    flexWrap: \"wrap\"\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1>Current Window Width: {width}</h1>\n      <div style={styles} className='colored-divs'>\n        {colorsArr}\n      </div>\n      <button onClick={addNewColour}>Add New Color</button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}