{"version":3,"sources":["Components/Controls.js","lightData.js","Components/Light.js","Components/Button.js","Components/App.js","index.js"],"names":["Controls","props","lightButtons","lightData","map","d","i","react_default","a","createElement","key","onClick","dispatch","lightState","name","lightCode","color","dispatchCount","type","payload","Fragment","className","Lights","styles","width","height","borderRadius","border","background","currentLightState","style","Button","currentClickState","console","log","lightReducer","state","action","countReducer","App","_useReducer","useReducer","_useReducer2","Object","slicedToArray","_useReducer3","_useReducer4","Components_Controls","Light","rootElement","document","getElementById","ReactDOM","render","Components_App"],"mappings":"gKA4BeA,MA1Bf,SAAkBC,GAEhB,IAIMC,EAAeD,EAAME,UAAUC,IAAI,SAACC,EAAGC,GAC3C,OAAOC,EAAAC,EAAAC,cAAA,UACLC,IAAKJ,EACLK,QAAS,WACPV,EAAMW,SAAS,CAAEC,WAAYR,EAAES,KAAMC,UAAWV,EAAEW,QAClDf,EAAMgB,cAAc,CAAEC,KAAM,SAAUC,QAAS,MAEjDd,EAAES,QAGN,OACEP,EAAAC,EAAAC,cAAAF,EAAAC,EAAAY,SAAA,KACEb,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YACZnB,KCdMC,EAAA,CACb,CAAEW,KAAM,MAAOE,MAAO,iBACtB,CAAEF,KAAM,MAAOE,MAAO,kBACtB,CAAEF,KAAM,MAAOE,MAAO,kBACtB,CAAEF,KAAM,OAAQE,MAAO,mBCOVM,MAff,SAAgBrB,GAEd,IAAMsB,EAAS,CACbC,MAAO,QACPC,OAAQ,QACRC,aAAc,MACdC,OAAQ,YACRC,WAAY3B,EAAM4B,kBAAkBd,WAGtC,OACER,EAAAC,EAAAC,cAAA,OAAKqB,MAAOP,KCZD,SAASQ,EAAO9B,GAG3B,OACIM,EAAAC,EAAAC,cAAAF,EAAAC,EAAAY,SAAA,KACIb,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQE,QAAS,WACbV,EAAMgB,cAAc,CAAEC,KAAM,SAAUC,QAAS,MADnD,KAGAZ,EAAAC,EAAAC,cAAA,UAAQE,QAAS,WACbV,EAAMgB,cAAc,CAAEC,KAAM,SAAUC,SAAU,MADpD,KAGAZ,EAAAC,EAAAC,cAAA,UAAQE,QAAS,WACbV,EAAMgB,cAAc,CAAEC,KAAM,MAAOC,QAAS,MADhD,UAKJZ,EAAAC,EAAAC,cAAA,kCAA0BR,EAAM+B,oBCd5CC,QAAQC,IAAI,YAAa/B,GAEzB,IAAMgC,EAAe,SAACC,EAAOC,GAC3B,OAAQA,EAAOxB,YACb,IAAK,MACH,MAAO,CAAEA,WAAY,MAAOE,UAAW,iBACzC,IAAK,MACH,MAAO,CAAEF,WAAY,MAAOE,UAAW,kBACzC,IAAK,MACH,MAAO,CAAEF,WAAY,SAAUE,UAAW,kBAC5C,IAAK,OACH,MAAO,CAAEF,WAAY,OAAQE,UAAW,kBAC1C,QACE,OAAOqB,IAIPE,EAAe,SAACF,EAAOC,GAC3B,OAAQA,EAAOnB,MACb,IAAK,SACH,OAAOkB,EAAQC,EAAOlB,QACxB,IAAK,MACH,OAAOkB,EAAOlB,QAEhB,QACE,OAAOiB,IAiBEG,MAdf,WAEE,IAAAC,EAAsCC,qBAAWN,EAAc,CAAEtB,WAAY,MAAOE,UAAW,kBAA/F2B,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAOX,EAAPa,EAAA,GAA0B9B,EAA1B8B,EAAA,GACAG,EAA2CJ,qBAAWH,EAAc,GAApEQ,EAAAH,OAAAC,EAAA,EAAAD,CAAAE,EAAA,GAAOb,EAAPc,EAAA,GAA0B7B,EAA1B6B,EAAA,GACA,OACEvC,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACbd,EAAAC,EAAAC,cAACsC,EAAD,CAAU5C,UAAWA,EAAWS,SAAUA,EAAUK,cAAeA,IACnEV,EAAAC,EAAAC,cAACsB,EAAD,CAAQd,cAAeA,EAAee,kBAAmBA,IACzDzB,EAAAC,EAAAC,cAACuC,EAAD,CAAOnB,kBAAmBA,MCnC1BoB,SAAcC,SAASC,eAAe,SAC5CC,IAASC,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAD,MAASL","file":"static/js/main.898d8e5c.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Controls(props) {\n\n  const handleClick = (button) => {\n    console.log('Controls - handleClick - button', button)\n  }\n\n  const lightButtons = props.lightData.map((d, i) => {\n    return <button\n      key={i}\n      onClick={() => {\n        props.dispatch({ lightState: d.name, lightCode: d.color });\n        props.dispatchCount({ type: \"CHANGE\", payload: 1 });\n      }}\n    >{d.name}</button>\n  })\n\n  return (\n    <>\n      <div className=\"controls\">\n        {lightButtons}\n      </div>\n\n    </>\n  )\n}\n\nexport default Controls","// Here is a list of rgba colors you could uses\n//    'off' - 'rgba(0,0,0,1)'\n//    'low' - 'rgba(0,0,0,.6)'\n//    'medium' - 'rgba(0,0,0,.3)'\n//    'high' - 'rgba(0,0,0,.1)'\n// */\n\nexport default [\n  { name: 'off', color: 'rgba(0,0,0,1)' },\n  { name: 'low', color: 'rgba(0,0,0,.6)' },\n  { name: 'med', color: 'rgba(0,0,0,.4)' },\n  { name: 'high', color: 'rgba(0,0,0,.1)' },\n]","import React from 'react'\nimport lightData from '../lightData'\n\nfunction Lights(props) {\n\n  const styles = {\n    width: '100px',\n    height: '100px',\n    borderRadius: '50%',\n    border: '1px solid',\n    background: props.currentLightState.lightCode\n  }\n\n  return (\n    <div style={styles}></div>\n  )\n}\n\nexport default Lights","import React from \"react\"\n\nexport default function Button(props) {\n\n\n    return (\n        <>\n            <div>\n                <button onClick={() => {\n                    props.dispatchCount({ type: \"CHANGE\", payload: 1 })\n                }}>+</button>\n                <button onClick={() => {\n                    props.dispatchCount({ type: \"CHANGE\", payload: -1 })\n                }}>-</button>\n                <button onClick={() => {\n                    props.dispatchCount({ type: \"SET\", payload: 0 })\n                }}>RESET</button>\n            </div>\n\n            <h2>Current Click Count: {props.currentClickState}</h2>\n        </>\n    )\n}","import React, { useReducer } from \"react\";\nimport Controls from './Controls'\nimport Light from './Light'\nimport lightData from '../lightData'\nimport Button from './Button'\nconsole.log('lightData', lightData)\n\nconst lightReducer = (state, action) => {\n  switch (action.lightState) {\n    case \"off\":\n      return { lightState: \"off\", lightCode: \"rgba(0,0,0,1)\" }\n    case \"low\":\n      return { lightState: \"low\", lightCode: \"rgba(0,0,0,.6)\" }\n    case \"med\":\n      return { lightState: \"medium\", lightCode: \"rgba(0,0,0,.4)\" }\n    case \"high\":\n      return { lightState: \"high\", lightCode: \"rgba(0,0,0,.1)\" }\n    default:\n      return state\n  }\n}\n\nconst countReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return state + action.payload\n    case \"SET\":\n      return action.payload\n\n    default:\n      return state\n  }\n}\nfunction App() {\n  //const controls = ['off', \"low\", 'medium', 'high']\n  const [currentLightState, dispatch] = useReducer(lightReducer, { lightState: \"off\", lightCode: \"rgba(0,0,0,1)\" });\n  const [currentClickState, dispatchCount] = useReducer(countReducer, 0);\n  return (\n    <div className=\"App\">\n      <Controls lightData={lightData} dispatch={dispatch} dispatchCount={dispatchCount} />\n      <Button dispatchCount={dispatchCount} currentClickState={currentClickState} />\n      <Light currentLightState={currentLightState} />\n    </div>\n\n  );\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './Components/App'\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n\n/* INSTRUCTIONS\n1. Fork the codesandbox\n2. Import and use useReducer in App. It should replace\n   the if statements and control state\n3. Make a Controls Component that has 4 buttons\n   â€“ off, low, medium, high\n4. Make the Light Component that will show 4 diff \n  shades of black based on which control button was clicked\n\nHere is a list of rgba colors you could uses\n   'off' - 'rgba(0,0,0,1)'\n   'low' - 'rgba(0,0,0,.6)'\n   'medium' - 'rgba(0,0,0,.3)'\n   'high' - 'rgba(0,0,0,.1)'\n*/"],"sourceRoot":""}